from aiogram import F, types, Router
from aiogram.filters import CommandStart, Command, or_f
from aiogram.utils.formatting import as_marked_section, as_list, Bold

from filters.chat_types import ChatTypeFilter

from kbds import reply


user_private_router = Router()
user_private_router.message.filter(ChatTypeFilter(['private']))

@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç, —è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫", reply_markup=reply.start_kb3.as_markup(
                            resize_keyboard=True,
                            input_field_placeholder='–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ?'
                        ))

@user_private_router.message(or_f(Command("menu"), F.text.lower() == '–º–µ–Ω—é'))
async def menu_cmd(message: types.Message):
    await message.answer("–í–æ—Ç –º–µ–Ω—é:", reply_markup=reply.del_kbd)

@user_private_router.message(F.text.lower() == '–æ –º–∞–≥–∞–∑–∏–Ω–µ')
@user_private_router.message(Command(commands='about'))
async def about_cmd(message: types.Message):
    await message.answer("–û –Ω–∞—Å")

@user_private_router.message(F.text.lower() == "–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã")
@user_private_router.message(Command("payment"))
async def payment_cmd(message: types.Message):
    text = as_marked_section(
    Bold("–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:"),
    '–ö–∞—Ä—Ç–æ–π –≤ –±–æ—Ç–µ',
    '–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç–∞/–∫—ç—à',
    '–í –∑–∞–≤–µ–¥–µ–Ω–∏–∏',
    marker='‚úÖ'

    )
    await message.answer(text.as_html())

@user_private_router.message((F.text.lower().contains('–¥–æ—Å—Ç–∞–≤–∫')) | (F.text.lower() == '–≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏'))
@user_private_router.message(Command("shipping"))
async def menu_cmd(message: types.Message):
    text = as_list(
        as_marked_section(
            Bold("–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏/–∑–∞–∫–∞–∑–∞:"),
            "–ö—É—Ä—å–µ—Ä",
            "–°–∞–º–æ–≤—ã–≤–æ–∑",
            "–ü–æ–∫—É—à–∞—Ç—å —É –Ω–∞—Å",
            marker='‚úÖ'
        ),
        as_marked_section(
            Bold('–ù–µ–ª—å–∑—è:'),
            "–ü–æ—á—Ç–∞",
            "–ì–æ–ª—É–±–∏)",
            marker='‚ùó'
        ),
        sep='\n------------------------------\n'
    )
    # await message.answer("<b>–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏:</b>", reply_markup=reply.test_kb, parse_mode=ParseMode.HTML)
    await message.answer(text=text.as_html(), reply_markup=reply.test_kb)


@user_private_router.message(F.contact)
async def get_contact(message: types.Message):
    await message.answer(f"–Ω–æ–º–µ—Ä –ø–æ–ª—É—á–µ–Ωüìû: {message.contact.phone_number}")
    await message.answer(str(message.contact))

@user_private_router.message(F.location)
async def get_location(message: types.Message):
    await message.answer(f"–õ–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞")
    await message.answer(f"{message.location}")